{"version":3,"sources":["webpack:///webpack/bootstrap 99c68da43404cc325684","webpack:///./src/index.js","webpack:///./src/scss/main.scss","webpack:///./src/modules/questions.js","webpack:///./src/modules/types.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7DA;;AAEoB;AACJ;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;;AAEA,wCAAwC,MAAM,MAAM,6FAA8B;AAClF;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA,uDAAuD,MAAM;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,aAAa;AACb;AACA,KAAK;AACL,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,aAAa,SAAS;AAC7D;;;;;;;;;;AC/JA,yC;;;;;;;ACAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,E;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA,E","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 99c68da43404cc325684","import './scss/main.scss';\r\n\r\nimport { questions } from './modules/questions.js';\r\nimport { types } from './modules/types.js';\r\n\r\nlet finalUrl = 'https://segmento.ru/survey_thankyou',\r\n    bannerWrapper = document.querySelector('.banner'),\r\n    startBtn = document.getElementById('btn-start'),\r\n    finishBtn = document.getElementById('btn-finish'),\r\n    startWrapper = document.querySelector('.banner__item--start'),\r\n    questionWrapper = document.querySelector('.banner__item--question'),\r\n    finishWrapper = document.querySelector('.banner__item--finish');\r\n\r\nlet user = {\r\n    answers: [],\r\n    nextQuestion: 1,\r\n    isSettedUp: false\r\n};\r\n\r\n\r\n\r\n// Events\r\ndocument.addEventListener('DOMContentLoaded', initUser);\r\nstartBtn.addEventListener('click', startInterview);\r\nfinishBtn.addEventListener('click', learnMore);\r\n\r\n/** \r\n * Инициализирует пользователя. \r\n * Берет данные о пользователе из localStorage,\r\n * если пользователь проходил опрос до этого\r\n*/\r\nfunction initUser() {\r\n    if (isUserReturned()) {\r\n        user = JSON.parse(localStorage.getItem('user-data'));\r\n        user.isSettedUp = false;\r\n        startInterview();\r\n    } \r\n}\r\n\r\n/** \r\n * Проверяет проходил ли пользователь тест до этого \r\n * @returns {boolean}\r\n*/\r\nfunction isUserReturned() {\r\n    return localStorage.getItem('user-data') !== null;\r\n}\r\n\r\n/** \r\n * Инициализирует процесс опроса\r\n * \r\n*/\r\nfunction startInterview() {\r\n    localStorage.clear();\r\n    bannerWrapper.classList.add('banner--no-image');\r\n    startWrapper.classList.add('hidden');\r\n    questionWrapper.classList.remove('hidden');\r\n    initQuestion(user.nextQuestion);\r\n}\r\n\r\n/**\r\n * \r\n * @param {number} index Номер вопроса\r\n */\r\nfunction initQuestion(index) {\r\n\r\n    let answers = document.querySelectorAll('.answer__text'),\r\n        questionLabel = document.querySelector('.question-label');\r\n\r\n    questionLabel.innerHTML = `Вопрос ${index} из ${Object.keys(questions).length}`;\r\n    if (!user.isSettedUp) {\r\n        user.isSettedUp = true;\r\n        for (let i = 0; i < answers.length; i++) {\r\n            answers[i].innerHTML = questions[index][i + 1];\r\n            answers[i].classList.add(`answer__text--n${i + 1}`);\r\n            answers[i].answer = i + 1;\r\n            answers[i].addEventListener('click', (e) => {\r\n                user.answers.push(e.target.answer || null);\r\n                if (user.answers.length < Object.keys(questions).length) {\r\n                    user.nextQuestion++;\r\n                    initQuestion(user.nextQuestion);\r\n                } else {\r\n                    finishInterview();\r\n                }\r\n\r\n            });\r\n        }\r\n    } else {\r\n        for (let i = 0; i < answers.length; i++) {\r\n            answers[i].innerHTML = questions[index][i + 1];\r\n        }\r\n    }\r\n    localStorage.setItem('user-data', JSON.stringify(user));\r\n}\r\n\r\n/**\r\n * Проверяет к какому типу принадлежит пользователь,\r\n * в зависимости от его ответов в процессе прохождения теста\r\n *    \r\n * Реализатор\r\n * Если на 2 (два) и более вопроса под номерами 1, 3, 5 пользователь выбрал 2 (второй вариант ответа) + \r\n * Если на 2 (два) и более вопроса под номерами 2, 4, 6 пользователь выбрал 1 (первый вариант ответа) \r\n *\r\n * Организатор\r\n * Если на 2 (два) и более вопроса под номерами 1, 3, 5 пользователь выбрал 1 (первый вариант ответа) + \r\n * Если на 2 (два) и более вопроса под номерами 2, 4, 6 пользователь выбрал 1 (первый вариант ответа) \r\n * \r\n * Мыслитель\r\n * Если на 2 (два) и более вопроса под номерами 1, 3, 5 пользователь выбрал 2 (второй вариант ответа) +\r\n * Если на 2 (два) и более вопроса под номерами 2, 4, 6 пользователь выбрал 2 (второй вариант ответа)\r\n * \r\n * Инноватор\r\n * Если на 2 (два) и более вопроса под номерами 1, 3, 5 пользователь выбрал 1 (первый вариант ответа) +\r\n * Если на 2 (два) и более вопроса под номерами 2, 4, 6 пользователь выбрал 2 (второй вариант ответа)\r\n * @returns {string} [Тип пользователя]\r\n */\r\nfunction checkUserType() {\r\n\r\n    let answers = user.answers;\r\n\r\n    // Вычислим сумму ответов 1, 3, 5 и 2, 4, 6\r\n    let sum135 = answers[0] + answers[2] + answers[4];\r\n    let sum246 = answers[1] + answers[3] + answers[5];\r\n\r\n    /* \r\n        Если сумма ответов больше или равна 5 - ответ 2 выбран 2 и более раз\r\n        Если сумма ответов меньше или равна 4 - ответ 1 выбран 2 и более раз\r\n    */\r\n    if (sum135 >= 5 && sum246 <= 4)\r\n        return types.realizer;\r\n    else if (sum135 <= 4 && sum246 <= 4)\r\n        return types.organizer;\r\n    else if (sum135 >= 5 && sum246 >= 5)\r\n        return types.thinker;\r\n    else if (sum135 <= 4 && sum246 >= 5)\r\n        return types.innovator;\r\n    else\r\n        return 'Unknown';\r\n\r\n}\r\n\r\n/** \r\n * Инициализирует процесс окончания опроса\r\n*/\r\nfunction finishInterview() {\r\n    localStorage.clear();\r\n    startWrapper.classList.add('hidden');\r\n    questionWrapper.classList.add('hidden');\r\n    finishWrapper.classList.remove('hidden');\r\n\r\n    let userType = checkUserType();\r\n    document.querySelector('.banner__user-type').innerHTML = userType;\r\n}\r\n\r\n/**\r\n * Переводит пользователя на страницу с благодарностями\r\n */\r\nfunction learnMore() {\r\n    let userType = Object.keys(types).find(key => types[key] === checkUserType());\r\n    window.location.href = `${finalUrl}?sociotype=${userType}`;\r\n}\r\n\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/scss/main.scss\n// module id = 1\n// module chunks = 0","export const questions = {\r\n    1: {\r\n        1: 'Обычно я знаю, как уговорить или попросить человека что-либо сделать.',\r\n        2: 'Я предпочитаю убеждать человека силой логических доводов.'\r\n    },\r\n    2: {\r\n        1: 'Случается, что я сначала прихожу к какому-либо умозаключению, а уж потом обосновываю его.',\r\n        2: 'Важные вопросы стараюсь решать последовательно и планомерно.'\r\n    },\r\n    3: {\r\n        1: 'У меня много друзей и еще больше знакомых. Я легко завожу новые знакомства.',\r\n        2: 'Я очень избирателен в общении. Редко кому могу рассказать о своих переживаниях.',\r\n    },\r\n    4: {\r\n        1: 'Люблю работать быстро, не раздумывая по пустякам.',\r\n        2: 'Стараюсь обдумывать всю получаемую информацию.',\r\n    },\r\n    5: {\r\n        1: 'В непредсказуемых обстоятельствах я чувствую себя немного неуверенно и скованно.',\r\n        2: 'Нестандартная ситуация активизирует меня.',\r\n    },\r\n    6: {\r\n        1: 'К своей цели иду последовательно, руководствуясь планом.',\r\n        2: 'Предпочитаю не «идти в гору», а обходить ее и не лезть напролом в достижении цели.',\r\n    },\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/questions.js\n// module id = 2\n// module chunks = 0","export const types = {\r\n    realizer: 'Реализатор',\r\n    organizer: 'Организатор',\r\n    thinker: 'Мыслитель',\r\n    innovator: 'Инноватор',\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/types.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}